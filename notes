4-4
  - 1 in col 3 forces TR exit column
  - if 0,0 is hall, upper left quadrant is cutoff

real dnd puzzles(4-4)



rules
  - augmenting treasure room in EmptyCantReachTreasure can't include wall, hall, or monster
  - 1/2 on the edge?
    - can this get extended to be generic if there are 1 or 2 walls remaining on the edge?
  - avoid cul-de-sac?  does this handle 1/2 on the edge?
  - wallprobe?
    - if adding a wall would be invalid, the candidate point must be empty
  - emptyprobe?
    - if adding an empty would be invalid, the candidate point must be a wall
  - wall bound box chains
  - tr w/ exit must border non-halls
  - last gap should not cause cul de sac
  - treasure cannot expand:  handle cases where current room width/height < 3 (and thus is not as strict as it could be)
  - empty w/ opposing walls must be hall
  - tr + monster gap claims in row/col:  if tr + monster gaps would take up all available gaps, everything else must be wall
  - update tr can't expand to require 3 walls if exit can't be on that side
  - walled tr must have exit
  - incomplete known hall crawls w/ one path to island they need to reach

improve description fields in ApplyResult
  - explain why
  - hints for the forcers?
should treasure room cannot expand get broken up and applied in multiple rules?
single-pass up-front rules?
Make CantReachTreasure bulk operate?
  - counterpoint:  this rule is unhumanlike and so should be avoided in an ideal solve anyway
board validation on initial create?
is there a way to avoid having to rerun rules if nothing that could affect them changed?
isvalid test should define w/ char input rather than code
cleanup pass
  - find homes for static methods in Board (possibly grid)
    - createBoard as companion object
    - validation
  - ApplyResult subtypes?  (contradiction vs not applicable vs real?)
rework the way real dnd tests are run to not require as much C&P and get aggregate metrics


enable rule selection/ordering
